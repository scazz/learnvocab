<?php

namespace Scazz\LearnVocabBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\Expr;


/**
 * TopicRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TopicRepository extends EntityRepository
{


	public function findAllByUser(User $user) {
		$q = $this->createQueryBuilder('t');
		$q->where('t.user = :user')
		  ->setParameter('user', $user);

		return $q->getQuery()->getResult();
	}

	public function findAllByUserAndIds(User $user, array $ids) {
		$q = $this->createQueryBuilder('t');

		$q->where(
			$q->expr()->andX(
				't.user = :user',
				't.id IN (:ids)'
			)
		)
			->setParameter('user', $user)
			->setParameter('ids', $ids);

		return $q->getQuery()->getResult();
	}

	public function findUnusedTopicsByTemplateSubjectName($templateSubjectName, User $user) {

		/* tt == TopicTemplate
		   tc == TopicCustom */
		$q = $this->createQueryBuilder('tt');

		$joinCondition =
			$q->expr()->andx(
				$q->expr()->eq('tt.name', 'tc.name'),
				$q->expr()->eq('tc.user', ':user')
			);


		$q->select('tt');
		$q->leftJoin('ScazzLearnVocabBundle:Topic', 'tc', Expr\Join::WITH, $joinCondition );
		$q->where('tt.templateSubjectName = :template_subject_name');
		$q->andWhere('tc.id is null');
		$q->setParameter('user', $user);
		$q->setParameter('template_subject_name', $templateSubjectName);
		return $q->getQuery()->getResult();

	}
}
