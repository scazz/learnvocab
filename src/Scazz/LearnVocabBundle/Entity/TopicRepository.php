<?php

namespace Scazz\LearnVocabBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\Expr;


/**
 * TopicRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TopicRepository extends EntityRepository
{


	public function findAllByUser(User $user) {
		$q = $this->createQueryBuilder('t');
		$q->where('t.user = :user')
		  ->setParameter('user', $user);

		return $q->getQuery()->getResult();
	}

	public function findAllByUserAndIds(User $user, array $ids) {
		$q = $this->createQueryBuilder('t');

		$q->where(
			$q->expr()->andX(
				't.user = :user',
				't.id IN (:ids)'
			)
		)
			->setParameter('user', $user)
			->setParameter('ids', $ids);

		return $q->getQuery()->getResult();
	}

	public function findUnusedTopicsByTemplateSubjectName($templateSubjectName, User $user) {

		$q = $this->createQueryBuilder('tt');
		$q->select('tt');
		$q->where('tt.templateSubjectName = :template_subject_name');
		$q->setParameter('template_subject_name', $templateSubjectName);
		$matchingTemplates =  $q->getQuery()->getResult();

		$passedTemplates = array();
		$q = $this->createQueryBuilder('tt');
		$q	->select('tt')
			->join('ScazzLearnVocabBundle:Subject', 's', Expr\Join::WITH, $q->expr()->eq('s', 'tt.subject') )
			->where('tt.user = :user')
			->andWhere('tt.name = :topicName')
			->andWhere('s.name = :template_subject_name');
		$q->setParameter('user', $user);
		$q->setParameter('template_subject_name', $templateSubjectName);

		foreach ($matchingTemplates as $template) {
			$q->setParameter('topicName', $template->getName() );
			if (!  count($q->getQuery()->getResult() )) {
				$passedTemplates[] = $template;
			}
		}

		return $passedTemplates;

	}
}
